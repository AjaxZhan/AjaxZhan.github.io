<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法--高精度运算</title>
      <link href="/2022/12/18/221218%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%951_2/"/>
      <url>/2022/12/18/221218%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%951_2/</url>
      
        <content type="html"><![CDATA[<h1 id="算法基础：高精度运算"><a href="#算法基础：高精度运算" class="headerlink" title="算法基础：高精度运算"></a>算法基础：高精度运算</h1><p>开头先感慨一下：正如今天斯坦福的老师讲的，用前沿的C++语言确实比用老套的C美丽得多。<br>感谢C++的新特性不断追求代码的高效简洁。<br>在高精度这件事情上，C需要处理的细节十分繁杂，而C++可以让代码更加优美简洁。</p><h2 id="算法–高精度运算"><a href="#算法–高精度运算" class="headerlink" title="算法–高精度运算"></a>算法–高精度运算</h2><p>C++同学独有哈哈，JAVA和python都不需要掌握。（强颜欢笑.jpg）<br>分类</p><ul><li>高精度加法 A + B</li><li>高精度减法 A - B （默认A &gt; B，反之只需特判。如出现负数，分类讨论加减法）</li><li>高精度乘法 A * a （一个大整数除以一个正常数）</li><li>高精度除法 A / a （高精度乘法和除法不会出现大数，概率小）</li></ul><p>emmm回想起来之前在B站看的全套高精度，甚至还有取模我的天，关键是还用的是C语言，代码量直接飞起来。<br><strong>高精度加法</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">// const int N = 1e6+10;</span></span><br><span class="line"><span class="comment">//优美的代码，我爱了</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;A,vector&lt;<span class="type">int</span>&gt;&amp;B)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;C;</span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>; <span class="comment">// 进位</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;A.<span class="built_in">size</span>() || i&lt;B.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; A.<span class="built_in">size</span>()) t+=A[i];</span><br><span class="line">        <span class="keyword">if</span>(i &lt; B.<span class="built_in">size</span>()) t+=B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(t%<span class="number">10</span>);</span><br><span class="line">        t/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(t) C.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string a,b;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;A,B;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b; <span class="comment">// a = &quot;123456&quot;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=a.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="comment">//A = [6,5,4,3,2,1]</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=b.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">auto</span> C  = <span class="built_in">add</span>(A,B);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=C.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,C[i]); </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>高精度减法</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//  判断是否有 A&gt;=B</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;A,vector&lt;<span class="type">int</span>&gt;&amp;B)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(A.<span class="built_in">size</span>()!=B.<span class="built_in">size</span>()) <span class="keyword">return</span> A.<span class="built_in">size</span>() &gt; B.<span class="built_in">size</span>();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=A.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">            <span class="keyword">if</span>(A[i]!=B[i])</span><br><span class="line">                <span class="keyword">return</span> A[i] &gt; B[i];</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>; <span class="comment">// 相等也满足条件</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sub</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;A,vector&lt;<span class="type">int</span>&gt;&amp;B)</span></span>&#123;</span><br><span class="line">    <span class="comment">//进行减法的实现</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;C;</span><br><span class="line">    <span class="comment">//  这里A的位数一定大于等于B的位数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>,t=<span class="number">0</span>;i&lt;A.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        t = A[i] - t;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;B.<span class="built_in">size</span>()) t-=B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>((t+<span class="number">10</span>)%<span class="number">10</span>); <span class="comment">// 这里可以将两种情况统一来写</span></span><br><span class="line">        <span class="comment">// 这里每一次减法的结果分为：大于等于0 为自己 小于0 借位</span></span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">0</span>) t =<span class="number">1</span>; <span class="comment">//借位</span></span><br><span class="line">        <span class="keyword">else</span> t = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//除掉前导0</span></span><br><span class="line">    <span class="keyword">while</span>(C.<span class="built_in">size</span>()&gt;<span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>()==<span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string a,b;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;A,B;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b; <span class="comment">// a = &quot;123456&quot;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=a.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="comment">//A = [6,5,4,3,2,1]</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=b.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">cmp</span>(A,B))&#123; <span class="comment">// 是否A&gt;=B</span></span><br><span class="line">        <span class="keyword">auto</span> C = <span class="built_in">sub</span>(A,B);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=C.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,C[i]); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> C = <span class="built_in">sub</span>(B,A);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=C.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,C[i]); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>高精度乘法</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;A,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;C;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;<span class="comment">//进位</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;A.<span class="built_in">size</span>() || t;i++)&#123; <span class="comment">//将最后的进位处理合在一起</span></span><br><span class="line">        <span class="keyword">if</span>(i&lt;A.<span class="built_in">size</span>()) t += A[i]*b; </span><br><span class="line">        C.<span class="built_in">push_back</span>(t%<span class="number">10</span>);<span class="comment">//当前位数</span></span><br><span class="line">        t/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;A;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=a.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>); <span class="comment">// 记得转化为整数</span></span><br><span class="line">    <span class="keyword">auto</span> C = <span class="built_in">mul</span>(A,b);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=C.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,C[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>高精度除法</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">div</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp;A,<span class="type">int</span> b,<span class="type">int</span> &amp;r)</span></span>&#123;</span><br><span class="line">    <span class="comment">//A / b  商C 余r</span></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;C;</span><br><span class="line">    r = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 6 5 4 3 2 1</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=A.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        r = r* <span class="number">10</span> + A[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(r/b);</span><br><span class="line">        r%=b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 1 2 3 4 5 6  但是输出的时候仍旧是反转输出，所以需要reverse</span></span><br><span class="line">    <span class="built_in">reverse</span>(C.<span class="built_in">begin</span>(),C.<span class="built_in">end</span>());</span><br><span class="line">    <span class="comment">//去除前导0</span></span><br><span class="line">    <span class="keyword">while</span>(C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    string a;</span><br><span class="line">    <span class="type">int</span> b;</span><br><span class="line">    cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;A;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=a.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="type">int</span> r;</span><br><span class="line">    <span class="keyword">auto</span> C = <span class="built_in">div</span>(A,b,r);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=C.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,C[i]);</span><br><span class="line">    cout &lt;&lt; endl &lt;&lt; r &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>算法--快排、归并排序、二分</title>
      <link href="/2022/12/18/221218%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%951_1/"/>
      <url>/2022/12/18/221218%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%951_1/</url>
      
        <content type="html"><![CDATA[<h1 id="算法基础：快排、归并排序、二分"><a href="#算法基础：快排、归并排序、二分" class="headerlink" title="算法基础：快排、归并排序、二分"></a>算法基础：快排、归并排序、二分</h1><h2 id="1-快排模板"><a href="#1-快排模板" class="headerlink" title="1. 快排模板"></a>1. 快排模板</h2><p><strong>快排由于边界问题，建议直接背诵模板</strong><br><strong>快排打蓝桥杯应该是用不到的，估计就以后面试会让手撕快排</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//第一遍</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="comment">//这边建议直接背诵，否则很多边界问题</span></span><br><span class="line"><span class="comment">//比如这里x不可以取q[r]，否则会无限递归</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span>; <span class="comment">// 边界判定</span></span><br><span class="line">    <span class="type">int</span> x =q[l+r&gt;&gt;<span class="number">1</span>],i = l<span class="number">-1</span>,j=r+<span class="number">1</span>; <span class="comment">// 取分界点,注意这里取中点否则会TLE，两个指针</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;j)&#123;</span><br><span class="line">        <span class="keyword">do</span> i++;<span class="keyword">while</span>(q[i]&lt;x);<span class="comment">//与前面取l-1对应，因为先做移动，再进行判断。</span></span><br><span class="line">        <span class="keyword">do</span> j--;<span class="keyword">while</span>(q[j]&gt;x);</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j) <span class="built_in">swap</span>(q[i],q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">quick_sort</span>(q,l,j);</span><br><span class="line">    <span class="built_in">quick_sort</span>(q,j+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    <span class="built_in">quick_sort</span>(q,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-归并排序"><a href="#2-归并排序" class="headerlink" title="2. 归并排序"></a>2. 归并排序</h2><p><strong>也是分治，但是时间复杂度严格为NlogN，相比之下，快排的期望是NlogN</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="type">int</span> tmp[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[],<span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l&gt;=r) <span class="keyword">return</span>; <span class="comment">// 如果只有一个数字或者没有数字就不用排序</span></span><br><span class="line">    <span class="type">int</span> mid = l + r&gt;&gt;<span class="number">1</span>; <span class="comment">//递归排序左右</span></span><br><span class="line">    <span class="built_in">merge_sort</span>(q,l,mid);</span><br><span class="line">    <span class="built_in">merge_sort</span>(q,mid+<span class="number">1</span>,r);</span><br><span class="line">    <span class="comment">//双指针合并过程</span></span><br><span class="line">    <span class="type">int</span> k=<span class="number">0</span>,i=l,j=mid+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=mid &amp;&amp; j&lt;=r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(q[i]&lt;=q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span> tmp[k++] = q[j++];</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="comment">//一轮后剩下的直接加到答案数组的后面</span></span><br><span class="line">    <span class="keyword">while</span>(i&lt;=mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span>(j&lt;=r) tmp[k++] = q[j++];</span><br><span class="line">    <span class="comment">//重新把k数组拷到q数组内</span></span><br><span class="line">    <span class="keyword">for</span>(i=l,j=<span class="number">0</span>;i&lt;=r;i++,j++)&#123;</span><br><span class="line">        q[i] = tmp[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;q[i]);</span><br><span class="line">    <span class="built_in">merge_sort</span>(q,<span class="number">0</span>,n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,q[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-整数二分和浮点数二分"><a href="#3-整数二分和浮点数二分" class="headerlink" title="3. 整数二分和浮点数二分"></a>3. 整数二分和浮点数二分</h2><p><strong>整数二分注意，两种模板情况，这里的模板题选的是数的范围</strong><br><strong>浮点数二分只要区分足够小就好了，注意一下精度的问题，判断条件比题目多两位精度</strong><br>整数二分</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n,q;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        <span class="type">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r &gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[mid] &gt;= x) r=mid; <span class="comment">// 区间左端点(性质的边界)</span></span><br><span class="line">            <span class="keyword">else</span> l =mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断是否满足题意：根据刚才二分取的是 左端点</span></span><br><span class="line">        <span class="keyword">if</span>(a[l]!=x) cout &lt;&lt; <span class="string">&quot;-1 -1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout &lt;&lt; l &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">            <span class="type">int</span> l =<span class="number">0</span>,r = n<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                <span class="type">int</span> mid = l+r+<span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(a[mid]&lt;=x) l = mid;</span><br><span class="line">                <span class="keyword">else</span> r = mid<span class="number">-1</span>; </span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; l &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>浮点数二分</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    cin &gt;&gt; x;</span><br><span class="line">    <span class="type">double</span> l =<span class="number">-10000</span>, r=<span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">while</span>(r - l &gt;<span class="number">1e-8</span>)&#123; <span class="comment">// 也可以不管啥直接迭代100次，除以100次。</span></span><br><span class="line">        <span class="type">double</span> mid = (l + r) /<span class="number">2</span>; <span class="comment">// 浮点数好像不能用位运算</span></span><br><span class="line">        <span class="keyword">if</span>(mid*mid*mid&lt;=x) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.6lf&quot;</span>,l);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Stanford CS106L 笔记-lecture01</title>
      <link href="/2022/12/18/221218CS106L_Stanford/"/>
      <url>/2022/12/18/221218CS106L_Stanford/</url>
      
        <content type="html"><![CDATA[<h1 id="Stream-I"><a href="#Stream-I" class="headerlink" title="Stream I"></a>Stream I</h1><aside>🥊 2022/12/18 14:14</aside><h2 id="Contents"><a href="#Contents" class="headerlink" title="Contents"></a>Contents</h2><ul><li>ostringstream</li><li>istringstream</li><li>bit state</li></ul><p>EX：write a function stringToInterger</p><h2 id="stringstream"><a href="#stringstream" class="headerlink" title="stringstream"></a>stringstream</h2><h3 id="ostringstream"><a href="#ostringstream" class="headerlink" title="ostringstream"></a>ostringstream</h3><p>it is not connected to any external source. only type conversion.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span> <span class="comment">// for stringstream</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="function">ostringstream <span class="title">oss</span><span class="params">(<span class="string">&quot;Ito En Green Tea&quot;</span>)</span></span>;</span><br><span class="line">    <span class="comment">// ostringstream oss(&quot;Ito En Green Tea &quot;,ostringstream::ate);</span></span><br><span class="line">    cout &lt;&lt; oss.<span class="built_in">str</span>() &lt;&lt; endl; </span><br><span class="line">    oss &lt;&lt; <span class="number">16.9</span> &lt;&lt; <span class="string">&quot; Ounce &quot;</span>;</span><br><span class="line">    cout &lt;&lt; oss.<span class="built_in">str</span>() &lt;&lt; endl;</span><br><span class="line">    oss &lt;&lt; <span class="string">&quot;(Pack of &quot;</span> &lt;&lt; <span class="number">12</span> &lt;&lt; <span class="string">&quot;)&quot;</span>;</span><br><span class="line">    cout &lt;&lt; oss.<span class="built_in">str</span>() &lt;&lt; endl; <span class="comment">// still overwrite</span></span><br><span class="line"></span><br><span class="line">    <span class="function">istringstream <span class="title">iss</span><span class="params">(oss.str())</span></span>;</span><br><span class="line">    <span class="type">double</span> account;</span><br><span class="line">    string unit;</span><br><span class="line">    iss &gt;&gt; account &gt;&gt; unit;</span><br><span class="line">    cout &lt;&lt; account &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; unit &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;half of the acoount is &quot;</span> &lt;&lt; account/<span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6efd1fdb-47e5-4af2-9bbd-b81223945bd4/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20221218/us-west-2/s3/aws4_request&X-Amz-Date=20221218T085642Z&X-Amz-Expires=86400&X-Amz-Signature=355b26e207a56db547d3d9b0262a67f246d75f4d7cdd1f2a76a60920fc129cb3&X-Amz-SignedHeaders=host&response-content-disposition=filename=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/6d71654d-ceb6-4a52-8c39-86a62cd97dd7/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20221218/us-west-2/s3/aws4_request&X-Amz-Date=20221218T085711Z&X-Amz-Expires=86400&X-Amz-Signature=b99f3f9e75da238b19d5703849983faf034722976f5dd792dac1390ce33999a8&X-Amz-SignedHeaders=host&response-content-disposition=filename=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p><p>The position started in the front, so we are <strong>overwriting</strong> the buffer.</p><p>if you use ostringstream(”something”,ostringstream::ate); then it starts at end.</p><h3 id="istringstream"><a href="#istringstream" class="headerlink" title="istringstream"></a>istringstream</h3><p>input streams read up to the next whitespace</p><p>also skips any leading whitespace</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ios&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="function">ostringstream <span class="title">oss</span><span class="params">(<span class="string">&quot;Ito En Green Tea &quot;</span>)</span></span>;</span><br><span class="line">    oss &lt;&lt; <span class="number">16.9</span>;</span><br><span class="line">    fpos pos = oss.<span class="built_in">tellp</span>() + <span class="built_in">streamoff</span>(<span class="number">3</span>);</span><br><span class="line">    oss.<span class="built_in">seekp</span>(pos);</span><br><span class="line">    oss &lt;&lt; <span class="string">&quot;black&quot;</span> ;</span><br><span class="line">    cout &lt;&lt; oss.<span class="built_in">str</span>() &lt;&lt; endl;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/1c96068f-5463-4a3e-8864-5495d7610567/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20221218/us-west-2/s3/aws4_request&X-Amz-Date=20221218T085724Z&X-Amz-Expires=86400&X-Amz-Signature=63e1d14b766f27ec60a9ff8925917fe4dc07ea462bf20099de6424b3d7654602&X-Amz-SignedHeaders=host&response-content-disposition=filename=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p><h3 id="bit-state"><a href="#bit-state" class="headerlink" title="bit state"></a>bit state</h3><p><img src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/8551b75d-aa15-46f1-bcb1-bceb9b2007fe/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45EIPT3X45/20221218/us-west-2/s3/aws4_request&X-Amz-Date=20221218T085740Z&X-Amz-Expires=86400&X-Amz-Signature=13d8a299b4c87156acc3a70fa3809621e79f5c75c9cfb0c1d4ea9897b7614133&X-Amz-SignedHeaders=host&response-content-disposition=filename=%22Untitled.png%22&x-id=GetObject" alt="Untitled"></p><p>good and bad  good and fail are not opposites</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">stringToInteger</span><span class="params">(<span class="type">const</span> string&amp; str)</span></span>&#123;</span><br><span class="line">    <span class="function">istringstream <span class="title">iss</span><span class="params">(str)</span></span>;</span><br><span class="line">    <span class="type">int</span> value;</span><br><span class="line">    iss &gt;&gt;  value;</span><br><span class="line">    <span class="keyword">if</span>(iss.<span class="built_in">fail</span>() || !iss.<span class="built_in">eof</span>()) <span class="keyword">throw</span> <span class="built_in">domain_error</span>(<span class="string">&quot;StringInteger ...&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pritnStateBits</span><span class="params">(istream&amp; s)</span></span>&#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;State bits : &quot;</span>;</span><br><span class="line">    cout &lt;&lt; (s.<span class="built_in">good</span>() ? <span class="string">&quot;G&quot;</span> : <span class="string">&quot;-&quot;</span>);</span><br><span class="line">    cout &lt;&lt; (s.<span class="built_in">fail</span>() ? <span class="string">&quot;F&quot;</span> : <span class="string">&quot;-&quot;</span>);</span><br><span class="line">    cout &lt;&lt; (s.<span class="built_in">eof</span>() ? <span class="string">&quot;E&quot;</span> : <span class="string">&quot;-&quot;</span>);</span><br><span class="line">    cout &lt;&lt; (s.<span class="built_in">bad</span>() ? <span class="string">&quot;B&quot;</span> : <span class="string">&quot;-&quot;</span>);</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc,<span class="type">char</span> *argv[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(argc!=<span class="number">2</span>)&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;usage : arg1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> val = <span class="built_in">stringToInteger</span>(argv[<span class="number">1</span>]);</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;You enter is &quot;</span> &lt;&lt; val &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Half of that is &quot;</span> &lt;&lt; val/<span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++ Primer第二章(P37-P51)</title>
      <link href="/2022/12/18/221218C++Primer/"/>
      <url>/2022/12/18/221218C++Primer/</url>
      
        <content type="html"><![CDATA[<h1 id="C-Primer第二章笔记-P37-P51"><a href="#C-Primer第二章笔记-P37-P51" class="headerlink" title="C++ Primer第二章笔记(P37-P51)"></a>C++ Primer第二章笔记(P37-P51)</h1><h2 id="1-知识索引"><a href="#1-知识索引" class="headerlink" title="1. 知识索引"></a>1. 知识索引</h2><p>列表初始化   分离式编译   新的标识符命名规范<br>作用域操作符   复合类型–引用和指针的区分</p><h2 id="2-感慨：第一次静心翻开这本书"><a href="#2-感慨：第一次静心翻开这本书" class="headerlink" title="2. 感慨：第一次静心翻开这本书"></a>2. 感慨：第一次静心翻开这本书</h2><h3 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h3><p>《C++ Primer》在11月份左右买来，当时已经看完了黑马程序员C++的全部内容，于是在多抓鱼上订来这本C++领域的知名大部头，却一直没专门安排时间翻阅。<br>究其原因，其实是有更多想做的事情。比如在学完黑马程序员后的大部分时间，我的时间几乎都是用来探索算法的学习。从《啊哈，算法》入门到前往洛谷刷题被题目狂虐到上B站找零散的视频进行学习，算法的学习之路一直很陡峭，感觉也在走弯路，没有进步。后面又认识了《挑战程序设计竞赛》这本书，结果在DP章节也被卡住了。好在临近12月份找到了ACWing的y总，感叹总算能给自己的算法学习系统一下了，于是几乎一天所有时间都花在了算法上，甚至微积分都有点荒废了…</p><h3 id="泥泞"><a href="#泥泞" class="headerlink" title="泥泞"></a>泥泞</h3><p>学习计算机从来不能局限于学校，不能局限于现实，也就是说，要超越你当前的视野。只有向巨人看齐，才会机会成为巨人。<br>然而，说句实话，在我的周围绝大部分同学都深陷于学业的泥沼中，他们不过把学习计算机当成了另一场“考试”，因此我也没有找到与我兴致和志趣相同的好友相伴学习。他们想等待填鸭，而我，想着往更广阔的世界探索。</p><h3 id="自我救赎"><a href="#自我救赎" class="headerlink" title="自我救赎"></a>自我救赎</h3><p>如果在高考前不断憧憬的大学生活只留下了随波逐流，那这余生也就无所谓意义了。我的想法是：在人生的任何时期，都要批判性地逆着大流走。世界人口达到80亿，在80亿之中，独立的灵魂更加可贵。<br>我喜欢向互联网上已经就业的前辈和已经读研的前辈取经，在这个过程中，我确定了大学四年的核心规划：通过自学提高竞争力。<br>现在回想起来，11月到12月中旬的现在，我犯的最大错误就是焦虑和过度在意他人的想法。</p><h3 id="凌晨起意"><a href="#凌晨起意" class="headerlink" title="凌晨起意"></a>凌晨起意</h3><p>已经凌晨1点了，第一次静下心来认真读这本C++领域“圣经”般的大部头。的确收获良多！</p><h4 id="之前的学习路线总结下来就是："><a href="#之前的学习路线总结下来就是：" class="headerlink" title="之前的学习路线总结下来就是："></a>之前的学习路线总结下来就是：</h4><blockquote><p>黑马程序员的C++全套看完 + 做完配套的小项目 + 刷OJ题过程中对STL的熟练 = 了解了C++的基础</p></blockquote><h4 id="未来的学习路线："><a href="#未来的学习路线：" class="headerlink" title="未来的学习路线："></a>未来的学习路线：</h4><blockquote><p>先通过《C++Primer》深入理解这门语言。再继续往《Effetive C++》和《STL源码剖析》这两本书看。<br>课程方面，寒假打算学习<em>CS106L: Standard C++ Programming</em>，利用高质量的lab锻炼自己的编码能力。</p></blockquote><h2 id="3-碎碎念最近的烦心事"><a href="#3-碎碎念最近的烦心事" class="headerlink" title="3. 碎碎念最近的烦心事"></a>3. 碎碎念最近的烦心事</h2><ul><li>好多事情想做，好多公开课想看，但是学校教授的无用课程一直在浪费我的时间，特别是数字逻辑。</li><li>微积分最近也懈怠了好久，写定积分的应用和微分方程被按在地上摩擦，哎……</li><li>最近一直熬夜，新冠又这么流行，对自己的健康很是担忧😂。加上最近一直做电脑前，眼睛也要保重呀</li></ul><h2 id="4-最后"><a href="#4-最后" class="headerlink" title="4. 最后"></a>4. 最后</h2><p><strong>想要保研，就必须自行兼顾自学和课业。</strong><br><strong>物竞天择，适者生存。学会兼顾和平衡是成为强者道路上必不可少的。加油！奥里给！</strong></p>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>闲聊杂谈--我的hexo博客搭建过程</title>
      <link href="/2022/12/16/%E7%AC%AC%E5%85%AD%E7%AF%87/"/>
      <url>/2022/12/16/%E7%AC%AC%E5%85%AD%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h2 id="闲聊杂谈–我的hexo博客搭建过程"><a href="#闲聊杂谈–我的hexo博客搭建过程" class="headerlink" title="闲聊杂谈–我的hexo博客搭建过程"></a>闲聊杂谈–我的hexo博客搭建过程</h2><p>闲聊杂谈–我的hexo博客搭建过程</p><h2 id="我爱博客，我爱分享，我爱编程"><a href="#我爱博客，我爱分享，我爱编程" class="headerlink" title="我爱博客，我爱分享，我爱编程"></a>我爱博客，我爱分享，我爱编程</h2>]]></content>
      
      
      <categories>
          
          <category> 闲聊杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>WEB前端学习</title>
      <link href="/2022/12/15/%E7%AC%AC%E4%BA%94%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/12/15/%E7%AC%AC%E4%BA%94%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB前端"><a href="#WEB前端" class="headerlink" title="WEB前端"></a>WEB前端</h2><p>WEB前端</p><h2 id="MIT-WEBLAB-我来啦"><a href="#MIT-WEBLAB-我来啦" class="headerlink" title="MIT WEBLAB 我来啦"></a>MIT WEBLAB 我来啦</h2>]]></content>
      
      
      <categories>
          
          <category> WEB前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JAVA后端开发小白来咯</title>
      <link href="/2022/12/15/%E7%AC%AC%E5%9B%9B%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/12/15/%E7%AC%AC%E5%9B%9B%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="JAVA后端开发小白来咯"><a href="#JAVA后端开发小白来咯" class="headerlink" title="JAVA后端开发小白来咯"></a>JAVA后端开发小白来咯</h2><p>JAVA后端开发小白来咯</p><h2 id="我爱JAVA，我爱后端开发，我要成为大神"><a href="#我爱JAVA，我爱后端开发，我要成为大神" class="headerlink" title="我爱JAVA，我爱后端开发，我要成为大神"></a>我爱JAVA，我爱后端开发，我要成为大神</h2>]]></content>
      
      
      <categories>
          
          <category> JAVA后端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++项目--基于多态的职工管理系统</title>
      <link href="/2022/12/15/%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/12/15/%E7%AC%AC%E4%B8%89%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="C-项目–基于多态的职工管理系统"><a href="#C-项目–基于多态的职工管理系统" class="headerlink" title="C++项目–基于多态的职工管理系统"></a>C++项目–基于多态的职工管理系统</h2><p>C++项目–基于多态的职工管理系统</p><h2 id="我爱C-，我爱学习，我爱编程"><a href="#我爱C-，我爱学习，我爱编程" class="headerlink" title="我爱C++，我爱学习，我爱编程"></a>我爱C++，我爱学习，我爱编程</h2>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>算法--线段树和树状数组</title>
      <link href="/2022/12/15/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/12/15/%E7%AC%AC%E4%BA%8C%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="算法–线段树和树状数组"><a href="#算法–线段树和树状数组" class="headerlink" title="算法–线段树和树状数组"></a>算法–线段树和树状数组</h2><p>算法–线段树和树状数组</p><h2 id="我爱蓝桥杯"><a href="#我爱蓝桥杯" class="headerlink" title="我爱蓝桥杯"></a>我爱蓝桥杯</h2>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>C++ Primer第二章</title>
      <link href="/2022/12/15/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/12/15/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="C-Primer第二章笔记"><a href="#C-Primer第二章笔记" class="headerlink" title="C++ Primer第二章笔记"></a>C++ Primer第二章笔记</h2><p>C++ Primer第二章笔记</p><h2 id="C-Primer第二章笔记-1"><a href="#C-Primer第二章笔记-1" class="headerlink" title="C++ Primer第二章笔记"></a>C++ Primer第二章笔记</h2>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
